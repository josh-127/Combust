
PpTok(HASH)
PpKw(if)
PpKw(ifdef)
PpKw(ifndef)
PpKw(elif)
PpKw(endif)
PpKw(include)
PpKw(define)
PpKw(undef)
PpKw(line)
PpKw(error)
PpKw(warning)

Tok(UNKNOWN)
Tok(EOF)
Tok(COMMENT)
Tok(IDENTIFIER)
Tok(INT_CONSTANT)
Tok(FLOAT_CONSTANT)
Tok(DOUBLE_CONSTANT)
Tok(STR_CONSTANT)
Tok(ANGLED_STR_CONSTANT)

Sym(LPAREN,      "(")   Sym(RPAREN,             ")")
Sym(LBRACKET,    "[")   Sym(RBRACKET,           "]")
Sym(LBRACE,      "{")   Sym(RBRACE,             "}")
Sym(SEMICOLON,   ";")   Sym(DOT,                ".")    Sym(COMMA,       ",")
Sym(TILDE,       "~")   Sym(QUESTION,           "?")    Sym(COLON,       ":")
Sym(PLUS,        "+")   Sym(PLUS_EQUALS,        "+=")   Sym(PLUS_PLUS,   "++")
Sym(MINUS,       "-")   Sym(MINUS_EQUALS,       "-=")   Sym(MINUS_MINUS, "--")  Sym(MINUS_GT,     "->")
Sym(ASTERISK,    "*")   Sym(ASTERISK_EQUALS,    "*=")
Sym(SLASH,       "/")   Sym(SLASH_EQUALS,       "/=")
Sym(PERCENT,     "%")   Sym(PERCENT_EQUALS,     "%=")
Sym(LT,          "<")   Sym(LT_EQUALS,          "<=")   Sym(LT_LT,       "<<")  Sym(LT_LT_EQUALS, "<<=")
Sym(GT,          ">")   Sym(GT_EQUALS,          ">=")   Sym(GT_GT,       ">>")  Sym(GT_GT_EQUALS, ">>=")
Sym(EQUALS,      "=")   Sym(EQUALS_EQUALS,      "==")
Sym(EXCLAMATION, "!")   Sym(EXCLAMATION_EQUALS, "!=")
Sym(AMPERSAND,   "&")   Sym(AMPERSAND_EQUALS,   "&=")   Sym(AMPERSAND_AMPERSAND, "&&")
Sym(CARET,       "^")   Sym(CARET_EQUALS,       "^=")
Sym(PIPE,        "|")   Sym(PIPE_EQUALS,        "|=")   Sym(PIPE_PIPE, "||")

Kw(const)    Kw(extern)   Kw(static)   Kw(auto)
Kw(volatile) Kw(unsigned) Kw(signed)   Kw(void)
Kw(char)     Kw(short)    Kw(int)      Kw(long)
Kw(float)    Kw(double)   Kw(enum)     Kw(struct)
Kw(union)    Kw(typedef)  Kw(sizeof)   Kw(register)
Kw(goto)     Kw(if)       Kw(else)     Kw(switch)
Kw(case)     Kw(default)  Kw(do)       Kw(while)
Kw(for)      Kw(break)    Kw(continue) Kw(return)
